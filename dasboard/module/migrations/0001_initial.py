# Generated by Django 3.0.4 on 2020-03-12 11:35

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_id', models.CharField(max_length=64, null=True, unique=True, verbose_name='Company ID')),
                ('module', models.CharField(max_length=128, verbose_name='Company')),
                ('module_wahl', models.CharField(blank=True, choices=[('freelancer', 'Freelancer'), ('commercial', 'Commercial operation'), ('gbr', 'BGB-Society (GbR)'), ('working group', 'Working group'), ('own company', 'Own company'), ('ohg', 'OHG'), ('kg', 'KG'), ('gmbh co kg', 'GmbH & Co. KG'), ('gmbh', 'GmbH'), ('ag', 'AG'), ('eg', 'E.G.'), ('ev', 'e.V.'), ('ug', 'UG'), ('other', 'Other')], max_length=16, verbose_name='Legal form')),
                ('martikelnummer', models.IntegerField(blank=True)),
                ('international_prefix', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='International prefix')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telephone Nr')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Module',
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_id', models.CharField(max_length=64, null=True, unique=True, verbose_name='Owner ID')),
                ('is_student', models.BooleanField(null=True, verbose_name='is_student')),
                ('studienstufe', models.CharField(choices=[('bachlor ', 'Bachlor'), ('Master', 'Master')], max_length=16, verbose_name='Stufen')),
                ('salutation', models.CharField(blank=True, choices=[('Herr', 'Herr'), ('Frau', 'Frau')], max_length=4, null=True, verbose_name='Salutation')),
                ('title', models.CharField(blank=True, choices=[('dr', 'dr'), ('prof', 'Prof')], max_length=10, null=True, verbose_name='Title')),
                ('first_name', models.CharField(max_length=64, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=64, verbose_name='Last Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('private_address_street', models.CharField(blank=True, max_length=50, verbose_name='Street of Private Address')),
                ('private_address_house_n', models.CharField(blank=True, max_length=10, verbose_name='House Number of Private Address')),
                ('private_address_extra', models.CharField(blank=True, max_length=50, verbose_name='Addition to Address')),
                ('private_address_postcode', models.CharField(blank=True, max_length=6, verbose_name='Postcode of Private Address')),
                ('private_address_city', models.CharField(blank=True, max_length=50, verbose_name='City of Private Address')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telephone Nr')),
                ('student_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owners', to='module.Module', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Student',
                'ordering': ('-is_student', 'last_name', 'id'),
            },
        ),
    ]
